/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['socket.io.js']) {
  _$jscoverage['socket.io.js'] = [];
  _$jscoverage['socket.io.js'][12] = 0;
  _$jscoverage['socket.io.js'][20] = 0;
  _$jscoverage['socket.io.js'][26] = 0;
  _$jscoverage['socket.io.js'][32] = 0;
  _$jscoverage['socket.io.js'][40] = 0;
  _$jscoverage['socket.io.js'][41] = 0;
  _$jscoverage['socket.io.js'][42] = 0;
  _$jscoverage['socket.io.js'][43] = 0;
  _$jscoverage['socket.io.js'][46] = 0;
  _$jscoverage['socket.io.js'][48] = 0;
  _$jscoverage['socket.io.js'][51] = 0;
  _$jscoverage['socket.io.js'][53] = 0;
  _$jscoverage['socket.io.js'][55] = 0;
  _$jscoverage['socket.io.js'][56] = 0;
  _$jscoverage['socket.io.js'][58] = 0;
  _$jscoverage['socket.io.js'][61] = 0;
  _$jscoverage['socket.io.js'][62] = 0;
  _$jscoverage['socket.io.js'][63] = 0;
  _$jscoverage['socket.io.js'][66] = 0;
  _$jscoverage['socket.io.js'][70] = 0;
  _$jscoverage['socket.io.js'][79] = 0;
  _$jscoverage['socket.io.js'][87] = 0;
  _$jscoverage['socket.io.js'][95] = 0;
  _$jscoverage['socket.io.js'][103] = 0;
  _$jscoverage['socket.io.js'][111] = 0;
}
_$jscoverage['socket.io.js'][12]++;
var http = require("http"), https = require("https"), client = require("socket.io-client");
_$jscoverage['socket.io.js'][20]++;
exports.version = "0.7.0";
_$jscoverage['socket.io.js'][26]++;
exports.protocol = 1;
_$jscoverage['socket.io.js'][32]++;
exports.clientVersion = client.version;
_$jscoverage['socket.io.js'][40]++;
exports.listen = (function (server, options, fn) {
  _$jscoverage['socket.io.js'][41]++;
  if ("function" == typeof options) {
    _$jscoverage['socket.io.js'][42]++;
    fn = options;
    _$jscoverage['socket.io.js'][43]++;
    options = {};
  }
  _$jscoverage['socket.io.js'][46]++;
  if ("undefined" == typeof server) {
    _$jscoverage['socket.io.js'][48]++;
    server = 80;
  }
  _$jscoverage['socket.io.js'][51]++;
  if ("number" == typeof server) {
    _$jscoverage['socket.io.js'][53]++;
    var port = server;
    _$jscoverage['socket.io.js'][55]++;
    if (options && options.key) {
      _$jscoverage['socket.io.js'][56]++;
      server = https.createServer(options, server);
    }
    else {
      _$jscoverage['socket.io.js'][58]++;
      server = http.createServer();
    }
    _$jscoverage['socket.io.js'][61]++;
    server.on("request", (function (req, res) {
  _$jscoverage['socket.io.js'][62]++;
  res.writeHead(200);
  _$jscoverage['socket.io.js'][63]++;
  res.end("Welcome to socket.io.");
}));
    _$jscoverage['socket.io.js'][66]++;
    server.listen(port, fn);
  }
  _$jscoverage['socket.io.js'][70]++;
  return new exports.Manager(server);
});
_$jscoverage['socket.io.js'][79]++;
exports.Manager = require("./manager");
_$jscoverage['socket.io.js'][87]++;
exports.Transport = require("./transport");
_$jscoverage['socket.io.js'][95]++;
exports.Socket = require("./socket");
_$jscoverage['socket.io.js'][103]++;
exports.Store = require("./store");
_$jscoverage['socket.io.js'][111]++;
exports.parser = require("./parser");
_$jscoverage['socket.io.js'].source = ["","/*!"," * socket.io-node"," * Copyright(c) 2011 LearnBoost &lt;dev@learnboost.com&gt;"," * MIT Licensed"," */","","/**"," * Module dependencies."," */","","var http = require('http')","  , https = require('https')","  , client = require('socket.io-client');","","/**"," * Version."," */","","exports.version = '0.7.0';","","/**"," * Supported protocol version."," */","","exports.protocol = 1;","","/**"," * Client that we serve."," */","","exports.clientVersion = client.version;","","/**"," * Attaches a manager"," *"," * @api public"," */","","exports.listen = function (server, options, fn) {","  if ('function' == typeof options) {","    fn = options;","    options = {};","  }","","  if ('undefined' == typeof server) {","    // create a server that listens on port 80","    server = 80;","  }","","  if ('number' == typeof server) {","    // if a port number is passed","    var port = server;","","    if (options &amp;&amp; options.key)","      server = https.createServer(options, server);","    else","      server = http.createServer();","","    // default response","    server.on('request', function (req, res) {","      res.writeHead(200);","      res.end('Welcome to socket.io.');","    });","","    server.listen(port, fn);","  }","","  // otherwise assume a http/s server","  return new exports.Manager(server);","};","","/**"," * Manager constructor."," *"," * @api public"," */","","exports.Manager = require('./manager');","","/**"," * Transport constructor."," *"," * @api public"," */","","exports.Transport = require('./transport');","","/**"," * Socket constructor."," *"," * @api public"," */","","exports.Socket = require('./socket');","","/**"," * Store constructor."," *"," * @api public"," */","","exports.Store = require('./store');","","/**"," * Parser."," *"," * @api public"," */","","exports.parser = require('./parser');"];
