/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['transports/htmlfile.js']) {
  _$jscoverage['transports/htmlfile.js'] = [];
  _$jscoverage['transports/htmlfile.js'][12] = 0;
  _$jscoverage['transports/htmlfile.js'][18] = 0;
  _$jscoverage['transports/htmlfile.js'][26] = 0;
  _$jscoverage['transports/htmlfile.js'][27] = 0;
  _$jscoverage['transports/htmlfile.js'][28] = 0;
  _$jscoverage['transports/htmlfile.js'][34] = 0;
  _$jscoverage['transports/htmlfile.js'][42] = 0;
  _$jscoverage['transports/htmlfile.js'][43] = 0;
  _$jscoverage['transports/htmlfile.js'][45] = 0;
  _$jscoverage['transports/htmlfile.js'][46] = 0;
  _$jscoverage['transports/htmlfile.js'][52] = 0;
  _$jscoverage['transports/htmlfile.js'][66] = 0;
  _$jscoverage['transports/htmlfile.js'][67] = 0;
  _$jscoverage['transports/htmlfile.js'][69] = 0;
  _$jscoverage['transports/htmlfile.js'][70] = 0;
  _$jscoverage['transports/htmlfile.js'][73] = 0;
}
_$jscoverage['transports/htmlfile.js'][12]++;
var HTTPTransport = require("./http");
_$jscoverage['transports/htmlfile.js'][18]++;
exports = module.exports = HTMLFile;
_$jscoverage['transports/htmlfile.js'][26]++;
function HTMLFile(mng, data) {
  _$jscoverage['transports/htmlfile.js'][27]++;
  HTTPTransport.call(this, mng, data);
}
_$jscoverage['transports/htmlfile.js'][28]++;
;
_$jscoverage['transports/htmlfile.js'][34]++;
HTMLFile.prototype.__proto__ = HTTPTransport.prototype;
_$jscoverage['transports/htmlfile.js'][42]++;
HTMLFile.prototype.handleRequest = (function (req) {
  _$jscoverage['transports/htmlfile.js'][43]++;
  HTTPTransport.prototype.handleRequest.call(this, req);
  _$jscoverage['transports/htmlfile.js'][45]++;
  if (req.method == "GET") {
    _$jscoverage['transports/htmlfile.js'][46]++;
    req.res.writeHead(200, {"Content-Type": "text/html", "Connection": "keep-alive", "Transfer-Encoding": "chunked"});
    _$jscoverage['transports/htmlfile.js'][52]++;
    req.res.write("<html><body>" + "<script>var _ = function (msg) { parent.s._(msg, document); };</script>" + new Array(174).join(" "));
  }
});
_$jscoverage['transports/htmlfile.js'][66]++;
HTMLFile.prototype.write = (function (data) {
  _$jscoverage['transports/htmlfile.js'][67]++;
  data = "<script>_(" + JSON.stringify(data) + ");</script>";
  _$jscoverage['transports/htmlfile.js'][69]++;
  if (this.response.write(data)) {
    _$jscoverage['transports/htmlfile.js'][70]++;
    this.drained = true;
  }
  _$jscoverage['transports/htmlfile.js'][73]++;
  this.log.debug("htmlfile writing", data);
});
_$jscoverage['transports/htmlfile.js'].source = ["","/*!"," * socket.io-node"," * Copyright(c) 2011 LearnBoost &lt;dev@learnboost.com&gt;"," * MIT Licensed"," */","","/**"," * Module requirements."," */","","var HTTPTransport = require('./http');","","/**"," * Export the constructor."," */","","exports = module.exports = HTMLFile;","","/**"," * HTMLFile transport constructor."," *"," * @api public"," */","","function HTMLFile (mng, data) {","  HTTPTransport.call(this, mng, data);","};","","/**"," * Inherits from Transport."," */","","HTMLFile.prototype.__proto__ = HTTPTransport.prototype;","","/**"," * Handles the request."," *"," * @api private"," */","","HTMLFile.prototype.handleRequest = function (req) {","  HTTPTransport.prototype.handleRequest.call(this, req);","","  if (req.method == 'GET') {","    req.res.writeHead(200, {","        'Content-Type': 'text/html'","      , 'Connection': 'keep-alive'","      , 'Transfer-Encoding': 'chunked'","    });","","    req.res.write(","        '&lt;html&gt;&lt;body&gt;'","      + '&lt;script&gt;var _ = function (msg) { parent.s._(msg, document); };&lt;/script&gt;'","      + new Array(174).join(' ')","    );","  }","};","","/**"," * Performs the write."," *"," * @api private"," */","","HTMLFile.prototype.write = function (data) {","  data = '&lt;script&gt;_(' + JSON.stringify(data) + ');&lt;/script&gt;';","","  if (this.response.write(data)) {","    this.drained = true;","  }","","  this.log.debug('htmlfile writing', data);","};"];
